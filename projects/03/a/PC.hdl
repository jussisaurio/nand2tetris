// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // if reset set prevout to 0
    // elif load set prevout to x
    // elif inc set prevout to prevout+1
    // else prevout=prevout

    // output muxout (initially zero because some of these cannot be computed at cycle 0)
    // (in the second cycle prevout is 0, and computation for the rest can start.)

    And16 (a=prevout, out=zero16);
    Add16 (a=prevout, b[0]=true, out=inc16);
    Mux16 (a=prevout, b=in, sel=load, out=load16);

    Or (a=reset, b=load, out=resetOrLoad);
    Or (a=resetOrLoad, b=inc, out=change);

    Mux (a=inc, b=reset, sel=resetOrLoad, out=selector);

    Mux4Way16 (a=prevout, b=inc16, c=load16, d=zero16, sel[1]=resetOrLoad, sel[0]=selector, out=muxout);

    Register(in=muxout, load=change, out=out, out=prevout);
}
